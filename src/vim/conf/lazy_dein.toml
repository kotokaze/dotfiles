# Coc Extentions ***************************************

[[plugins]]
repo = 'weirongxu/coc-calc'
depends = ['coc.nvim']

[[plugins]]
repo = 'iamcco/coc-spell-checker'
depends = ['coc.nvim']

# Language supports
[[plugins]]
repo = 'clangd/coc-clangd'
on_ft = ['c', 'cpp', 'objc', 'objcpp']
depends = ['coc.nvim']

[[plugins]]
repo = 'neoclide/coc-css'
on_ft = ['css', 'scss', 'less']
depends = ['coc.nvim']
hook_source = '''
  autocmd FileType css setl iskeyword+=-
  autocmd FileType scss setl iskeyword+=@-@
'''

[[plugins]]
repo = 'josa42/coc-go'
on_ft = ['go']
depends = ['coc.nvim']

[[plugins]]
repo = 'neoclide/coc-json'
on_ft = ['json']
depends = ['coc.nvim']

[[plugins]]
repo = 'fannheyward/coc-pyright'
on_ft = ['python']
depends = ['coc.nvim']

[[plugins]]
repo = 'fannheyward/coc-rust-analyzer'
on_ft = ['rust']
depends = ['coc.nvim']

[[plugins]]
repo = 'josa42/coc-sh'
depends = ['coc.nvim']

[[plugins]]
repo = 'fannheyward/coc-texlab'
depends = ['coc.nvim']

[[plugins]]
repo = 'kkiyama117/coc-toml'
on_ft = ['toml']
depends = ['coc.nvim']

[[plugins]]
repo = 'fannheyward/coc-xml'
on_ft = ['xml']
depends = ['coc.nvim']

[[plugins]]
repo = 'neoclide/coc-yaml'
on_ft = ['yaml']
depends = ['coc.nvim']

# ******************************************************


# Translation
[[plugins]]
repo = 'vim-jp/vimdoc-ja'
hook_add = '''
  set helplang=ja
'''

# Doxygen
[[plugins]]
repo = 'vim-scripts/DoxygenToolkit.vim'
on_ft = ['c', 'cpp']
hook_source = '''
    nmap <leader>dox :Dox<CR>
'''

[[plugins]]
repo = 'lambdalisue/glyph-palette.vim'

# Icons
[[plugins]]
repo = 'ryanoasis/vim-devicons'
depends = ['glyph-palette.vim']
hook_source = '''
  set encoding=UTF-8
  let g:WebDevIcons_enable_nerdtree = 1
  let g:WebdevIcons_enable_ctrlp = 1
  let g:WebdevIcons_enable_vimfiler_git_status = 1
'''

# Filer
[[plugins]]
repo = 'preservim/nerdtree'
depends = ['vim-devicons']
hook_add = '''
  " Disable VIM default filer
  let g:loaded_netrw=1
  let g:loaded_netrwPlugin=1
  let g:loaded_netrwSettings=1
  let g:loaded_netrwFileHandlers=1

    " Start NERDTree. If a file is specified, move the cursor to its window.
  autocmd StdinReadPre * let s:std_in=1
  autocmd VimEnter * NERDTreeFocus | if argc() > 0 || exists("s:std_in") | wincmd p | endif

  " Exit Vim if NERDTree is the only window remaining in the only tab.
  autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif

  " If another buffer tries to replace NERDTree, put it in the other window, and bring back NERDTree.
  autocmd BufEnter * if bufname('#') =~ 'NERD_tree_\d\+' && bufname('%') !~ 'NERD_tree_\d\+' && winnr('$') > 1 |
      \ let buf=bufnr() | buffer# | execute "normal! \<C-W>w" | execute 'buffer'.buf | endif

  nmap <silent> <C-n> :NERDTreeToggle<CR>
  nmap <silent> <C-f> :NERDTreeFind<CR>
'''

# Git
[[plugins]]
repo = 'tpope/vim-fugitive'

# Preview replacements
[[plugins]]
repo = 'markonm/traces.vim'
on_i = 1

# Open browser
[[plugins]]
repo = 'tyru/open-browser.vim'

# Markdown preview
[[plugins]]
repo = 'previm/previm'
depends = ['open-browser.vim']
on_ft = ['markdown', 'md']
hook_add = '''
  let g:previm_enable_realtime = 1
'''

# Markdown table
[[plugins]]
repo = 'mattn/vim-maketable'
on_ft = ['markdown', 'md']
